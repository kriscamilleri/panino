# /etc/nginx/sites-available/your-domain.conf

# --------------------------------------------------------------------------
# Redirect all HTTP traffic to HTTPS
# --------------------------------------------------------------------------
server {
    listen 80;
    server_name ${DOMAIN};

    # Let's Encrypt ACME challenge
    location ~ /.well-known/acme-challenge/ {
        allow all;
        root /var/www/html;
    }

    location / {
        return 301 https://$server_name$request_uri;
    }
}

# --------------------------------------------------------------------------
# Main server block for HTTPS, static assets, and API proxy
# --------------------------------------------------------------------------
server {
    listen 443 ssl http2;
    server_name ${DOMAIN};

    # --- SSL Configuration ---
    ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;

    # --- Security & Browser Feature Headers ---
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    # Required for cr-sqlite wasm with SharedArrayBuffer
    add_header Cross-Origin-Opener-Policy "same-origin" always;
    add_header Cross-Origin-Embedder-Policy "require-corp" always;

    # --- General Settings ---
    # Set max body size to match backend limit for uploads, PDF generation, etc.
    client_max_body_size 50M;

    # --------------------------------------------------------------------------
    # Centralized Proxy Logic (Named Location) ✅ FIX
    # --------------------------------------------------------------------------
    # This block is not accessible from the outside. It holds all proxy settings
    # to avoid repetition and issues with the 'if' directive.
    location @api_service {
        proxy_pass http://127.0.0.1:8000;
        proxy_http_version 1.1;

        # These headers are needed for both regular API calls and WebSockets
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # These headers are specifically for WebSocket upgrades
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";

        proxy_buffering off;
        proxy_redirect off;
    }

    # --------------------------------------------------------------------------
    # Location block for the unified API Service
    # --------------------------------------------------------------------------
    # This matches all known API routes handled by the single backend service.
    location ~ ^/(signup|login|me|sync|images|render-pdf|forgot-password|reset-password) {
        # Unconditionally pass the request to our named location handler.
        try_files /nonexistent-file @api_service;
    }

    # --------------------------------------------------------------------------
    # Location block for the Frontend SPA, Static Assets, and WebSocket
    # --------------------------------------------------------------------------
    # This is the catch-all location.
    location / {
        # Use a safe internal redirect for WebSocket requests ✅ FIX
        error_page 418 = @api_service; # Map a custom error to the named location
        if ($http_upgrade = 'websocket') {
            return 418; # Trigger the internal redirect
        }

        # If not a WebSocket, serve the Vue.js Single Page Application (SPA).
        root /var/www/${DOMAIN}/dist;
        try_files $uri $uri/ /index.html;

        # Add a nested location block to cache static assets for better performance.
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|wasm)$ {
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }
    }
}