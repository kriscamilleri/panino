# File: nginx.conf.template

# --- HTTP Server: Redirects all traffic to HTTPS ---
server {
    listen 80;
    listen [::]:80;
    server_name ${DOMAIN};

    # Required for Let's Encrypt certificate renewal
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# --- HTTPS Server: Main application server ---
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ${DOMAIN};

    # SSL configuration (managed by Certbot)
    ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";

    # == API Traffic ==
    # All requests starting with /api/ will be proxied to your backend.
    location /api/ {
        # This line removes the "/api" prefix before forwarding the request,
        # so your backend doesn't need to know about it.
        rewrite ^/api/(.*)$ /$1 break;
        
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        client_max_body_size 50M; # For image uploads
    }

    # == WebSocket Traffic ==
    # A dedicated location for WebSocket connections.
    location /ws/ {
        proxy_pass http://127.0.0.1:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_read_timeout 86400s; # Keep connection alive for 24 hours
    }
    
    # == Frontend Application (Vue.js SPA) ==
    # All other requests are served as static files.
    location / {
        root /var/www/${DOMAIN}/dist;
        # This lets your Vue Router handle all non-file requests.
        try_files $uri $uri/ /index.html;
    }
}